<template>
  <view class="container">
    <!-- 列表 -->
    <view class="content">
      <view class="topbar">
        <view class="topbar-container">
          <view class="topbar-item topbar-item_left  {{clickTimes > 0 ? 'clicked' : ''}}" bindtap="orederAverage">
            人均
            <text class="iconfont icon-triangledownfill sorticon {{choosenid == 1 ? 'choosen' : ''}}"></text>
            <text class="iconfont icon-triangleupfill sorticon {{choosenid == 2 ? 'choosen' : ''}}"></text>
          </view>
          <selector :index.sync="index"></selector>
          <view class="mapmode" bindtap="toMap"><text class="iconfont icon-locationfill mapicon"></text>地图</view>
        </view>
      </view>
      <view class="contentlist" wx:if="{{isLoaded}}">
        <list :resList.sync="resList"></list>
      </view>
      <view class="selectChanger">
        <view class="changeritem {{index > 0 ? 'showicon' : ''}}" bindtap="prevType"><text class="iconfont icon-fold"></text></view>
        <view class="next changeritem {{index < 14 ? 'showicon' : ''}}" bindtap="nextType"><text class="iconfont icon-unfold"></text></view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import _ from 'lodash';
import List from '../components/reslist';
import Select from '../components/select';
import host from '../config.js';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '精选杭州餐厅'
  }

  components = {
    selector: Select,
    list: List
  }

  data = {
    isLoaded: false,
    currentTabIndex: 0,
    resList: [],
    index: 0,
    clickTimes: 0,
    choosenid: 1,
    restaurants: [
      'hotel',
      'west',
      'hangzhou',
      'idea',
      'hotpot',
      'japan',
      'family',
      'guangdong',
      'noodle',
      'cake',
      'dragon',
      'bbq',
      'vegetarian',
      'thai',
      'tea'
    ]
  }

  onShareAppMessage() {
    return {
      title: '为你寻找杭州好味道',
      path: '/pages/index',
      imageUrl: 'https://lg-kfc8r7cy-1252865942.cos.ap-shanghai.myqcloud.com/sharepic.jpg'
    }
  }

  onShow() {
    var that = this;
    let key = wx.getStorageSync('key')
    if(key){
      this.getCommentCount()
      this.getPlantPick().then(res => {
        if (this.$parent.globalData.all.length) {
          this.getRestaurant()
        } else {
          this.$parent.ajax(host.service.getResUrl, 'POST', { tag: 'all' }).then(res => {
              that.$parent.globalData.all = res.data
              that.getRestaurant()
          })
        }
      })
      this.index = this.$parent.globalData.index
      this.$apply()
    }
  }

  // 页面初始化
  onLoad() {
    wx.showLoading({
      title: '加载中'
    })
    wx.showShareMenu()
    var that = this;
    this.$parent.login().then(res => {
      if(res.statusCode == 200){
        this.getCommentCount()
        this.getPlantPick().then(res => {
          if (this.$parent.globalData.all.length) {
            this.getRestaurant()
          } else {
            this.$parent.ajax(host.service.getResUrl, 'POST', { tag: 'all' }).then(res => {
                that.$parent.globalData.all = res.data
                that.getRestaurant()
            })
          }
        })
        this.index = this.$parent.globalData.index
        this.$apply()
        wx.hideLoading()
        that.isLoaded = true
        that.$apply()
      }
    })
  }

  // 渲染获取到的餐厅到地图上
  getRestaurant() {
    var that = this
    this.getSelectedData().then(res => {
      var data = res
      var list_new = []
      var allcomment = this.$parent.globalData.comments
      data.forEach(val => {
        var single = {
          id: val.id,
          picid: val.picid,
          average_price: val.average_price - 0,
          name: val.resname,
          lnglat: val.lnglat,
          business: val.business,
          commentcount: 0
        }
        //console.log(this.$parent.globalData.pick)
        var isPlanted = _.indexOf(this.$parent.globalData.plant, val.id)
        var isPicked = _.indexOf(this.$parent.globalData.pick, val.id)
        //console.log(isPicked)
        if(isPlanted >=0){
          single.planted = true
          single.picked = false
        }

        if(isPicked >=0){
          single.planted = false
          single.picked = true
        }

        allcomment.forEach(com =>{
          if(com.postid == val.id){
            single.commentcount = com.length
          }
        })

        list_new.push(single)
      })
      if (that.$parent.globalData.sorted) {
        that.resList = _.orderBy(
          list_new,
          'average_price',
          that.$parent.globalData.orders
        )
      } else {
        that.resList = list_new
      }
      that.isready = true;
      that.$apply()
    })
  }

  // 获取指定分类的餐厅
  getSelectedData() {
    var that = this
    return new Promise((resolve, reject) => {
      var tag = that.$parent.globalData.selected
      var all = that.$parent.globalData.all
      var resdata = []
      all.forEach(val => {
        if (val.tag == tag) {
          resdata.push(val)
        }
      })
      if (resdata.length) {
        resolve(resdata)
      } else {
        reject('获取分类错误')
      }
    })
  }

  // 获取种草及拔草
  getPlantPick(){
    this.$parent.globalData.plant = []
    this.$parent.globalData.pick = []
    return new Promise((resolve,reject) => {
      this.$parent.ajax(host.service.getfavUrl,'POST').then(res => {
        var result = _.groupBy(res, 'type')
        if(result.plant){
          var plant = result.plant
          plant.forEach(val => {
            this.$parent.globalData.plant.push(val.resid)
            this.$apply()
          })
        }
        if(result.pick){
          var pick = result.pick
          pick.forEach(val => {
            this.$parent.globalData.pick.push(val.resid)
            this.$apply()
          })
        }
        resolve(true)
      })
    })
  }

  // 获取评论数
  getCommentCount(){
    return new Promise((resolve,reject) => {
      this.$parent.ajax(host.service.getAllComment,'POST').then(res => {
        var rowresult = _.groupBy(res,'postid')
        var result = []
        _.forIn(rowresult, (val,key) => {
          var single = {}
          single.postid = key
          single.length = val.length
          result.push(single)
        })
        this.$parent.globalData.comments = result
        this.$apply()

        resolve(true)
      })
    })
  }

  // 排序
  orederAverage() {
    this.clickTimes = this.clickTimes + 1
    var clicktype = this.clickTimes % 2
    if (clicktype) {
      var orderedList = _.orderBy(this.resList, 'average_price', 'desc')
      this.$parent.globalData.orders = 'desc'
      this.choosenid = 1
    } else {
      var orderedList = _.orderBy(this.resList, 'average_price', 'asc')
      this.$parent.globalData.orders = 'asc'
      this.choosenid = 2
    }
    this.$parent.globalData.sorted = true
    this.resList = orderedList
    this.$apply()
  }

  // 切换分类
  nextType() {
    if (this.index < 14) {
      var tag = this.restaurants[this.index + 1]
      this.$parent.globalData.index = this.index - 0 + 1
      this.index = this.index - 0 + 1
      this.selected = tag
      this.$parent.globalData.selected = tag
      this.$apply()
      this.getRestaurant()
      wx.pageScrollTo({
        scrollTop: 0,
        duration: 0
      })
    }
  }

  prevType() {
    if (this.index > 0) {
      var tag = this.restaurants[this.index - 1]
      this.$parent.globalData.index = this.index - 1
      this.index = this.index - 1
      this.selected = tag
      this.$parent.globalData.selected = tag
      this.$apply()
      this.getRestaurant()
      wx.pageScrollTo({
        scrollTop: 0,
        duration: 0
      })
    }
  }

  // 切换到地图
  toMap() {
    wx.navigateTo({
      url: '/pages/map'
    })
  }

  // 处理子组件事件
  events = {
    reGet: (p1, p2, $event) => {
      this.$parent.globalData.selected = p1
      this.$parent.globalData.index = p2
      this.selected = p1
      this.index = p2 - 0
      this.$apply()
      wx.pageScrollTo({
        scrollTop: 0,
        duration: 0
      })
      this.getRestaurant()
    },
    locate: lnglat => {
      this.currentTabIndex = 0
      var lnglatarr = lnglat.split(',')
      this.longitude = lnglatarr[0] + ''
      this.latitude = lnglatarr[1] + ''
      //this.scale = 18
      this.$apply()
    }
  }
}
</script>
<style>
/* 顶部栏 */
.topbar {
  position: fixed;
  width: 100%;
  height: 50px;
  left: 0;
  top: 0;
  overflow: hidden;
  background: #fff;
  z-index: 2;
  border-bottom: 1px solid #f4f4f4;
}
.topbar-container {
  height: 36rpx;
  padding: 30rpx 40rpx;
}
.topbar-item {
  position: absolute;
  top:50%;
  transform:translateY(-50%);
  left:40rpx;
  font-size: 16px;
}
.choosen.topbar-item {
  color: #2ed573;
}
.topbar-item .iconfont {
  margin-right: 2px;
}
.topbar-item_left .iconfont {
  font-size: 10px;
  position: relative;
  top: -2px;
}

.topbar-item_right {
  float: right;
  margin-right: 0;
}
.hide {
  display: none;
}
.active {
  display: block;
}
#map {
  width: 100%;
  height: 100%;
}
.selectChanger {
  position: fixed;
  right: 40rpx;
  bottom: 40rpx;
}
.changeritem {
  display: none;
  background: #eee;
  width:80rpx;
  height:80rpx;
  line-height: 80rpx;
  text-align: center;
  border-radius: 80rpx;
}
.changeritem.showicon{
  display: block;
}
.changeritem .iconfont{
  font-size: 24px;
  color:#333;
}
.next {
  margin-top: 10px;
}
.clicked {
  color: #fa6650;
}
.sorticon {
  display: none;
}
.choosen {
  display: inline-block;
}

.mapmode{
  position: absolute;
  top:50%;
  transform:translateY(-50%);
  right:40rpx;
  font-size:16px;
}
.mapicon{
  display: inline-block;
  margin-right:4rpx;
}
</style>
